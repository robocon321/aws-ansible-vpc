- name: Setup Vprofile Stack
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Import VPC setup Variable
      include_vars: vars/output_vars.txt

    - name: Import Vprofile setup Variable
      include_vars: vars/vprostacksetup.txt

    - name: Create vprofile ec2 key
      ec2_key:
        name: vprokey
        region: "{{region}}"
      register: vprokey_out

    - name: Save private key into loginkey_pro.pem
      copy:
        content: "{{vprokey_out.key.private_key}}"
        dest: "./loginkey_pro.pem"
        mode: 0600
      when: vprokey_out.changed

    - name: Create Security Group for Load Balancer
      ec2_group:
        name: vproELB-sg
        description: Allow port 80 from everywhere and all port within sg 
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: vproELBSG_out

    - name: Create Security Group for Vprofile Stack
      ec2_group:
        name: vproStack-sg
        description: Allow port 22 from everywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vproELBSG_out.group_id}}"

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{bastionSGid}}"
      register: vproStackSG_out
    
    - name: Update Security Group with its own sg id
      ec2_group:
        name: vproStack-sg
        description: Allow port 22 from everywhere and all port within sg 
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{vproStackSG_out.group_id}}"
    
    - name: Create Nginx web01
      ec2:
        key_name: vprokey 
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "web01"
          Project: Vprofile
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "web01"
          Project: Vprofile
          Owner: DevOps Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{prisub1id}}"
      register: web01_out

    - name: Create tomcat app01
      ec2:
        key_name: vprokey 
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{tomcat_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "app01"
          Project: Vprofile
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "app01"
          Project: Vprofile
          Owner: DevOps Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{prisub1id}}"
      register: app01_out

    - name: Create memcache mc01
      ec2:
        key_name: vprokey 
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{memcache_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "mc01"
          Project: Vprofile
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "mc01"
          Project: Vprofile
          Owner: DevOps Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{prisub1id}}"
      register: mc01_out

    - name: Create RabbitMQ mc01
      ec2:
        key_name: vprokey 
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{rmq_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "rmq01"
          Project: Vprofile
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "rmq01"
          Project: Vprofile
          Owner: DevOps Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{prisub1id}}"
      register: rmq01_out

    - name: Create MySql mc01
      ec2:
        key_name: vprokey 
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{mysql_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "db01"
          Project: Vprofile
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "db01"
          Project: Vprofile
          Owner: DevOps Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{prisub1id}}"
      register: db01_out

    - local_action:
        module: ec2_elb_lb
        name: "vprofile-elb"
        region: "{{region}}"
        state: present
        instance_ids:
          - "{{web01_out.tagged_instances[0].id}}"
        purge_instance_id: true
        security_group_id: "{{vproELBSG_out.group_id}}"
        subnets:
          - "{{pubsub1id}}"
          - "{{pubsub2id}}"
          - "{{pubsub3id}}"
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80

    - name: Insert/Update hosts IP & Nmae in file provision-stack/group_vars/hostsip
      blockinfile:
        path: provision-stack/group_vars/hostsip
        block: |
          web01_ip: {{web01_out.tagged_instances[0].private_id}}
          app01_ip: {{app01_out.tagged_instances[0].private_id}}
          rmq01_ip: {{rmq01_out.tagged_instances[0].private_id}}
          mc01_ip: {{mc01_out.tagged_instances[0].private_id}}
          db01_ip: {{db01_out.tagged_instances[0].private_id}}

    - name: Copy login key to provision_stack directory
      copy:
        src: loginkey_pro.pem
        dest: provision-stack/loginkey_vpro.pem
        mode: 0400
      
    - name: Insert/Update Inventory file provision-stack/inventory-vpro
      blockinfile:
        path: provision-stack/inventory-vpro
        block: |
            web01 ansible_host={{web01_out.tagged_instances[0].private_id}}
            app01 ansible_host={{app01_out.tagged_instances[0].private_id}}
            rmq01 ansible_host={{rmq01_out.tagged_instances[0].private_id}}
            mc01 ansible_host={{mc01_out.tagged_instances[0].private_id}}
            db01 ansible_host={{db01_out.tagged_instances[0].private_id}}
            cntl ansible_host=127.0.0.1 ansible_connection=local

            [websrvgrp]
            web01

            [rmqsrcgrp]
            rmq01

            [rmqsrcgrp]
            rmq01

            [mcsrcgrp]
            mc01

            [dbsrcgrp]
            db01

            [control]
            cntl

            [stack_inst:vars]
            ansible_user=ubuntu
            ansible_ssh_private_key_file=loginkey_vpro.pem
            #ansible_python_interpreter=/usr/bin/python3